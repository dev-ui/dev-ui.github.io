{"data":{"site":{"siteMetadata":{"author":{"name":"UI-Dev","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"ui code lab","title":"UI-Dev","url":"https://uidev.netlify.com"}},"markdownRemark":{"id":"3afea5c5-5c22-5cbd-87d8-7691188eab1b","html":"<p>context를 이용하면 단계마다 일일이 props를 넘겨주지 않고도 컴포넌트 트리 전체에 데이터를 제공할 수 있다.</p>\n<p>일반적인 React 애플리케이션에서 데이터는 위에서 아래로 (즉, 부모로부터 자식에게) props를 통해 전달되지만, 애플리케이션 안의 여러 컴포넌트들에 전해줘야 하는 props의 경우 (예를 들면 선호 로케일, UI 테마) 이 과정이 번거로울 수 있다. context를 이용하면, 트리 단계마다 명시적으로 props를 넘겨주지 않아도 많은 컴포넌트가 이러한 값을 공유하도록 할 수 있다.</p>\n<h2 id=\"context를-써야-하는-상황\"><a href=\"#context%EB%A5%BC-%EC%8D%A8%EC%95%BC-%ED%95%98%EB%8A%94-%EC%83%81%ED%99%A9\" aria-label=\"context를 써야 하는 상황 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>context를 써야 하는 상황</h2>","fields":{"tagSlugs":["/tag/react/","/tag/ui/"]},"frontmatter":{"date":"2019-08-21T22:40:32.169Z","description":"React Context API","tags":["react","ui"],"title":"React Context API"}}},"pageContext":{"slug":"/posts/react-context/"}}